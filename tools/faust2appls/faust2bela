#!/bin/bash


#FAUST DATA:
ARCHBELA="bela.cpp"
NVOICES=0
EFFECT="none"

#-------------------------------------------------------------------
#PHASE 1 : dispatch command arguments
#-------------------------------------------------------------------
while [ $1 ] 
do
    p=$1
    
    # HELP:
    if [ $p = "-help" ] || [ $p = "-h" ]; then
    	echo "help info: TO DO"
    	echo "./faust2bela [-midi][-nvoices <num>] [-effect <auto or file.dsp>] <file.dsp>"
    	echo "Use '-midi' to activate MIDI control"
    	echo "Use '-effect <effect.dsp>' to produce a polyphonic DSP connected to a global output effect, ready to be used with MIDI"
        echo "Use '-effect auto' to produce a polyphonic DSP connected to a global output effect defined as 'effect' in <file.dsp>, ready to be used with MIDI"
    	echo "Use '-nvoices <num>' to produce a polyphonic self-contained DSP with <num> voices, it must need -midi option also"
    	echo "Polyphonic mode means MIDI instrument with at least 1 voice, so include monophonic instrument."
    	echo "Use '-osc' to activate OSC control"
    	echo "use no arguments for a simple effect."
        exit
    fi
    
	# -NVOICES:
    if [ $p = "-nvoices" ]; then
        shift
        NVOICES=$1
	# -EFFECT:
    elif [ $p = "-effect" ]; then
        POLY="POLY2"
        shift
        EFFECT=$1
    # -MIDI
    elif [ $p = "-midi" ]; then
    	MIDIDEFS="MIDI"
	elif [ $p = "-osc" ]; then
		OSCDEFS="OSC"
	elif [[ -f "$p" ]]; then
	    FILES="$FILES $p"
	else
	    OPTIONS="$OPTIONS $p"
	fi

shift

done
#-------------------------------------------------------------------
#PHASE 2 : compile the *.dsp files
#-------------------------------------------------------------------

CUR=$(pwd)

for f in $FILES; do

    # creates a temporary dir 
    TMP=$(mktemp -d faust.XXXXXX)

    # Start 'render.cpp' with required compilation options

    echo '// Options :' > "$TMP/render.cpp"
    if [ $NVOICES -gt 0 ]; then
	    echo '#define NVOICES '$NVOICES >> "$TMP/render.cpp"
    fi

    if [[ "$MIDIDEFS" ==  *MIDI* ]]; then
	    echo '#define MIDICTRL' >> "$TMP/render.cpp"
    fi

    if [[ "$OSCDEFS" ==  *OSC* ]]; then
	    echo '#define OSCCTRL' >> "$TMP/render.cpp"
    fi
    
	if [[ "$POLY" ==  *POLY2* ]]; then
	    echo '#define POLY2' >> "$TMP/render.cpp"
    fi

    faust -i -a $ARCHBELA $OPTIONS "$f" >> "$TMP/render.cpp" || exit   

    # compile faust to c++
    if [ $EFFECT = "auto" ]; then
        faust -i -cn effect -pn effect -a minimal-effect.cpp "$f" -o "$TMP/effect.cpp" || exit
    elif [[ -f "$EFFECT" ]]; then
        faust -i -cn effect -a minimal-effect.cpp "$EFFECT" -o "$TMP/effect.cpp" || exit
    fi

    echo "$TMP/render.cpp"
done