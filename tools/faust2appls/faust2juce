#! /bin/bash -e

#####################################################################
#                                                                   #
#           Compiles Faust programs to JUCE standalone or plugin    #
#           (c) Grame, 2016-2017                                    #
#                                                                   #
#####################################################################

. faustpath
. faustoptflags
CXXFLAGS=$MYGCCFLAGS

ARCHFILESTANDALONE="juce-standalone.cpp"
ARCHFILEPLUGIN="juce-plugin.cpp"

PATH=$PATH:/usr/local/bin
DEBUG=false

#-------------------------------------------------------------------
#PHASE 1 : dispatch command arguments
#-------------------------------------------------------------------

OSCLIB=""
POLY="POLY"
DEF=""
EFFECT=""
NVOICES=-1
STANDALONE="0"
IS_SYNTH="0"
IS_MIDI="0"
JUCE_POLY="0"

while [ $1 ]
do
    p=$1

    if [ $p = "-help" ] || [ $p = "-h" ]; then
        echo "faust2juce [-standalone] [-nvoices <num>] [-effect <effect.dsp>] [-jsynth] [-midi] [-osc] <file.dsp>"
        echo "Use '-standalone' to produce a standalone project, otherwise a plugin project is generated"
        echo "Use '-nvoices <num>' to produce a polyphonic self-contained DSP with <num> voices, ready to be used with MIDI or OSC"
        echo "Use '-effect <effect.dsp>' to produce a polyphonic DSP connected to a global output effect, ready to be used with MIDI or OSC"
        echo "Use '-jsynth' to use JUCE polyphonic Synthesizer instead of Faust polyphonic code"
        echo "Use '-midi' to activate MIDI control"
        echo "Use '-osc' to activate OSC control"
        exit
    fi

    if [ "$p" = -debug ]; then
    	DEBUG=true
    elif [ $p = "-nvoices" ]; then
        shift
        NVOICES=$1
    elif [ $p = "-standalone" ]; then
        STANDALONE="1"
    elif [ $p = "-effect" ]; then
        DEF+="POLY2 "
        POLY="POLY2"
        shift
        EFFECT=$1
    elif [ $p = "-jsynth" ]; then
        DEF+="JUCE_POLY "
        JUCE_POLY="1"
    elif [ $p = "-midi" ]; then
        DEF+="MIDICTRL "
        IS_MIDI="1"
    elif [ $p = "-osc" ]; then
		 DEF+="OSCCTRL "
		 OSCLIBS="-lOSCFaust"
	elif [ "$p" = "-httpd" ]; then
		DEF+="HTTPCTRL "
		HTTPLIBS="-lHTTPDFaust -lmicrohttpd -lqrencode"
	elif [ "$p" = "-qrcode" ]; then # requires -httpd
		DEF+="QRCODECTRL "
    elif [ ${p:0:1} = "-" ]; then
	    OPTIONS="$OPTIONS $p"
	elif [[ -f "$p" ]]; then
	    FILES="$FILES $p"
	else
	    OPTIONS="$OPTIONS $p"        
	fi

shift

done

if [ $STANDALONE = "1" ] && [ $JUCE_POLY = "1" ]; then
    echo "Cannot use -standalone with -jsynth"
    exit
fi

if [ $POLY = "POLY2" ] && [ $JUCE_POLY = "1" ]; then
    echo "Cannot use -effect with -jsynth"
    exit
fi

#look for polyphonic "nvoices" metadata in the DSP file

grep "declare nvoices" $FILES && IS_SYNTH="1" 2>/dev/null

#-------------------------------------------------------------------
# compile the *.dsp files
#-------------------------------------------------------------------

for p in $FILES; do

    CUR=$(pwd)
    f=$(basename "$p")
	SRCDIR=$(dirname "$p")

    # creates the dir 
    dspName="${f%.dsp}"
    SUB_TYPE=$(echo ${dspName:0:4} | tr [[:upper:]] [[:lower:]])
    rm -rf "$SRCDIR/$dspName"

    if [ $STANDALONE = "0" ]; then
        cp -r "/usr/local/share/faust/juce/plugin" "$SRCDIR/$dspName/"
        # setting plugin name to match the dsp
        sed -e "s/SUB_TYPE/$SUB_TYPE/g" "$dspName/plugin.jucer" >> "$dspName/$dspName-temp.jucer"
    else
        cp -r "/usr/local/share/faust/juce/standalone" "$SRCDIR/$dspName/"
        # setting project name to match the dsp
        sed -e "s/ProjectTitle/$dspName/g" "$dspName/standalone.jucer" >> "$dspName/$dspName-temp.jucer"
    fi

    # setting the preprocessing definitions
    sed -e "s/PreProcDef/$DEF/g" "$dspName/$dspName-temp.jucer" >> "$dspName/$dspName-temp1.jucer"
    sed -e "s/APPL_NAME/$dspName/g" "$dspName/$dspName-temp1.jucer" >> "$dspName/$dspName-temp2.jucer"

    # MIDI
    sed -e "s/IS_MIDI/$IS_MIDI/g" "$dspName/$dspName-temp2.jucer" >> "$dspName/$dspName-temp3.jucer"

    # SYNTH
    sed -e "s/IS_SYNTH/$IS_SYNTH/g" "$dspName/$dspName-temp3.jucer" >> "$dspName/$dspName-temp4.jucer"

    # possibly set NVOICES value
    if [ $NVOICES -ge 0 ]; then
        sed -e "s/NUM_VOICES/$NVOICES/g" "$dspName/$dspName-temp4.jucer" >> "$dspName/$dspName.jucer"
    else
        cp  "$dspName/$dspName-temp4.jucer" "$dspName/$dspName.jucer"
    fi

    # standalone of plugin mode
    if [ $STANDALONE = "0" ]; then
        rm "$dspName/plugin.jucer"
    else
        rm "$dspName/standalone.jucer"
    fi

    rm "$dspName/$dspName-temp.jucer" "$dspName/$dspName-temp1.jucer"  "$dspName/$dspName-temp2.jucer"
    rm "$dspName/$dspName-temp3.jucer" "$dspName/$dspName-temp4.jucer"

    # standalone of plugin mode
    if [ $STANDALONE = "0" ]; then
        faust -i -a $ARCHFILEPLUGIN $OPTION "$SRCDIR/$f" -o "$dspName/PluginProcessor.h" || exit
        if [ $POLY = "POLY2" ]; then
            faust -i -cn dsp_effect -a minimal-effect.cpp "$SRCDIR/$EFFECT" -o "$dspName/dsp_effect.cpp" || exit
        fi
    else
        faust -i -a $ARCHFILESTANDALONE $OPTION "$SRCDIR/$f" -o "$dspName/MainComponent.h" || exit
        if [ $POLY = "POLY2" ]; then
            faust -i -cn dsp_effect -a minimal-effect.cpp "$SRCDIR/$EFFECT" -o "$dspName/dsp_effect.cpp" || exit
        fi
    fi

done


