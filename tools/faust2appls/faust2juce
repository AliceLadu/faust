#! /bin/bash -e

#####################################################################
#                                                                   #
#               Compiles Faust programs to core Juce                #
#               (c) Grame, 2016                                     #
#                                                                   #
#####################################################################

. faustpath
. faustoptflags
CXXFLAGS=$MYGCCFLAGS

ARCHFILE="juce.cpp"
ARCHLIB="-L/usr/local/lib -L/opt/local/lib -framework CoreAudio -framework AudioUnit -framework CoreServices -framework CoreMIDI -framework CoreFoundation"
PATH=$PATH:/usr/local/bin
DEBUG=false


#-------------------------------------------------------------------
# Analyze command arguments :
# faust options                 -> OPTIONS
# if -omp : -openmp or -fopenmp -> OPENMP
# existing *.dsp files          -> FILES
#

# PHASE 1 : Look for -icc option to force use of intel icc (actually icpc)
# without having to configure CXX and CXXFLAGS
for p in $@; do
	if [ "$p" = -icc ]; then
		# we ignore -icc when compiling for QT
		TOTO=""
		#CXX=icpc
		#CXXFLAGS='-Wfatal-errors -O3 -xT -ftz -fno-alias -fp-model fast=2'
    fi
done

#PHASE 2 : dispatch command arguments

OSCINC=""
QTDEFS=""
OSCLIB=""
POLY="POLY"
DEPLOY=""
DEF=""
EFFECT=""
NVOICES=-1
CPPFLAGS=""

while [ $1 ]
do
    p=$1

    if [ $p = "-help" ] || [ $p = "-h" ]; then
        echo "faust2juce [-nvoices <num>] [-effect <effect.dsp>] [-midi] [-osc] <file.dsp>"
        echo "Use '-nvoices <num>' to produce a polyphonic self-contained DSP with <num> voices, ready to be used with MIDI or OSC"
        echo "Use '-effect <effect.dsp>' to produce a polyphonic DSP connected to a global output effect, ready to be used with MIDI or OSC"
        echo "Use '-midi' to activate MIDI control"
        echo "Use '-osc' to activate OSC control"
    fi
    # Only -poly, -midi and -osc available for now
    if [ "$p" = -omp ]; then
        if [[ $CXX == "icpc" ]]; then
            OMP="-openmp"
        else
            OMP="-fopenmp"
        fi
    fi
  
    if [ "$p" = -debug ]; then
    	DEBUG=true
    elif [ $p = "-deploy" ]; then
        DEPLOY="yes"
    elif [ "$p" = -icc ]; then
    	ignore=" "
    elif [ $p = "-nvoices" ]; then
        shift
        NVOICES=$1
    elif [ $p = "-effect" ]; then
        DEF+="POLY2 "
        POLY="POLY2"
        shift
        EFFECT=$1
    elif [ $p = "-midi" ]; then
        DEF+="MIDICTRL "
    elif [ $p = "-osc" ]; then
		 DEF+="OSCCTRL "
		 OSCLIBS="-lOSCFaust"
	elif [ "$p" = "-httpd" ]; then
		DEF+="HTTPCTRL "
		HTTPLIBS="-lHTTPDFaust -lmicrohttpd -lqrencode"
	elif [ "$p" = "-qrcode" ]; then # requires -httpd
		DEF+="QRCODECTRL "
    elif [ ${p:0:1} = "-" ]; then
	    OPTIONS="$OPTIONS $p"
	elif [[ -f "$p" ]]; then
	    FILES="$FILES $p"
	else
	    OPTIONS="$OPTIONS $p"        
	fi

shift

done

#-------------------------------------------------------------------
# compile the *.dsp files
#
for p in $FILES; do

    CUR=$(pwd)
    f=$(basename "$p")
	SRCDIR=$(dirname "$p")

    # creates the dir 
    dspName="${f%.dsp}"
    rm -rf "$SRCDIR/$dspName"
    cp -r "/usr/local/share/faust/jucer" "$SRCDIR/$dspName"
    
    # setting project name to match de the dsp
    sed -e "s/ProjectTitle/$dspName/g" "$dspName/templateJucer.jucer" >> "$dspName/$dspName-temp.jucer"

    # setting the preprocessing definitions
    sed -e "s/PreProcDef/$DEF/g" "$dspName/$dspName-temp.jucer" >> "$dspName/$dspName-temp1.jucer"
    sed -e "s/NUM_VOICES/$NVOICES/g" "$dspName/$dspName-temp1.jucer" >> "$dspName/$dspName.jucer"

    rm "$dspName/templateJucer.jucer"
    rm "$dspName/$dspName-temp.jucer"
    rm "$dspName/$dspName-temp1.jucer"

    if [ $POLY = "POLY2" ]; then
        faust -i -a $ARCHFILE $OPTION "$SRCDIR/$f" -o "$dspName/Source/MainComponent.h" || exit
        faust -i -cn dsp_effect -a minimal-effect.cpp "$SRCDIR/$EFFECT" -o "$dspName/Source/dsp_effect.cpp" || exit
    else
        faust -i -a $ARCHFILE $OPTION "$SRCDIR/$f" -o "$dspName/Source/MainComponent.h" || exit
    fi

done


